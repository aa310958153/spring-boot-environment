<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.liqiang</groupId>
    <artifactId>spring-boot-environment02</artifactId>
    <version>1.1.2</version>
    <name>spring-boot-environment02</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>1.8</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--不采用spring boot的打包方式，我们只-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--            </plugin>-->
            <!--自定义打包方式 排除所有资源文件 因为我们的资源文件都在conf里面 这样会在我们的jar-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <!--会在META-INF/MANIFEST.MF 指定main-->
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.liqiang.springbootenvironment02.SpringBootEnvironment02Application</mainClass>
                        </manifest>
                    </archive>
                    <excludes>
                        <exclude>**/*.properties</exclude>
                        <exclude>**/*.xml</exclude>
                        <exclude>**/*.yml</exclude>
                        <exclude>static/**</exclude>
                        <exclude>public/**</exclude>
                        <exclude>templates/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution><!--执行器 mvn assembly:assembly-->
                        <id>assemble</id><!--名字任意 -->
                        <goals>
                            <goal>single</goal> <!-- 该打包任务只运行一次 -->
                        </goals>
                        <phase>package</phase><!-- 绑定到package生命周期阶段上 -->
                    </execution>
                </executions>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <attach>false</attach>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!--使用默认的变量分割符即${} 可以自己定义格式-->
                <configuration>
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                </configuration>
                <version>3.1.0</version>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!--没有指定变量默认激活-->
                <activeByDefault>true</activeByDefault>
                <!--maven打包的变量名和参数名字 如: mvn clean install -Dmaven.test.skip -Denv=dev-->
                <property>
                    <name>env</name>
                    <value>dev</value>
                </property>
            </activation>
            <!--占位符定义-->
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>${project.basedir}/src/main/resources</directory>
                        <!--这个配置的意思是过滤上面指定属性文件中的占位符，占位符是${变量名称}这样的形式，maven会自动读取includes配置文件，然后解析其中的占位符，使用上面pom文件中定义的属性进行替换-->
                        <filtering>true</filtering>
                        <includes>
                            <include>*.*</include>
                        </includes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <!--自定义打包xml文件-->
                            <descriptors>
                                <descriptor>${basedir}/src/main/assembly/dev.xml</descriptor>
                            </descriptors>
                            <!--打包文件名字-->
                            <finalName>spring-boot-environment02</finalName>
                            <!--打包输出目录-->
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>

                </plugins>
            </build>

        </profile>
        <profile>
            <id>release</id>
            <activation>
                <!--maven打包的变量名和参数名字 如: mvn clean install -Dmaven.test.skip -Denv=release-->
                <property>
                    <name>env</name>
                    <value>release</value>
                </property>
            </activation>
            <!--占位符定义-->
            <properties>
                <spring.profiles.active>pro</spring.profiles.active>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>${project.basedir}/src/main/resources</directory>
                        <!--这个配置的意思是过滤上面指定属性文件中的占位符，占位符是${变量名称}这样的形式，maven会自动读取includes配置文件，然后解析其中的占位符，使用上面pom文件中定义的属性进行替换-->
                        <filtering>true</filtering>
                        <includes>
                            <include>*.*</include>
                        </includes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <!--自定义打包xml文件-->
                            <descriptors>
                                <descriptor>${basedir}/src/main/assembly/release.xml</descriptor>
                            </descriptors>
                            <!--打包文件名字-->
                            <finalName>spring-boot-environment02</finalName>
                            <!--打包输出目录-->
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>

                </plugins>
            </build>

        </profile>
    </profiles>

</project>
