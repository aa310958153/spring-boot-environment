<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.liqiang</groupId>
	<artifactId>spring-boot-environment01</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-environment01</name>
	<description>spring boot多环境配置</description>
	<properties>
		<java.version>1.8</java.version>
		<name>version</name>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<!--没有指定变量默认激活-->
				<activeByDefault>true</activeByDefault>
				<!--maven打包的变量名和参数名字 如: mvn clean install -Dmaven.test.skip -Denv=dev-->
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<!--占位符定义-->
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
				<name>dev</name>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<!--没有指定变量默认激活-->
				<activeByDefault>true</activeByDefault>
				<!--maven打包的变量名和参数名字 如: mvn clean install -Dmaven.test.skip -Denv=dev-->
				<property>
					<name>env</name>
					<value>test</value>
				</property>
			</activation>
			<!--占位符定义-->
			<properties>
				<spring.profiles.active>test</spring.profiles.active>
				<name>version2</name>
			</properties>
		</profile>
		<profile>
			<id>pro</id>
			<activation>
				<!--没有指定变量默认激活-->
				<activeByDefault>true</activeByDefault>
				<!--maven打包的变量名和参数名字 如: mvn clean install -Dmaven.test.skip -Denv=dev-->
				<property>
					<name>env</name>
					<value>pro</value>
				</property>
			</activation>
			<!--占位符定义-->
			<properties>
				<spring.profiles.active>pro</spring.profiles.active>
				<name>version3</name>
			</properties>
		</profile>
	</profiles>

	<!--也可以定义在profile里面 如果写在profile就是针对profile的build-->
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>d</targetPath>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<!--这个配置的意思是过滤上面指定属性文件中的占位符，占位符是${变量名称}这样的形式，maven会自动读取includes配置文件，然后解析其中的占位符，使用上面pom文件中定义的属性进行替换-->
				<filtering>true</filtering>
				<includes>
					<include>*.yml</include>
				</includes>
				<!--可用于排除某些-->
				<!--				<excludes>-->
				<!--					<exclude>file</exclude>-->
				<!--				</excludes>-->
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<!--使用默认的变量分割符即${} 可以自己定义格式-->
				<configuration>
					<useDefaultDelimiters>true</useDefaultDelimiters>
				</configuration>
				<version>3.1.0</version>
			</plugin>
		</plugins>
	</build>

</project>
